<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>io.sarl.docs</artifactId>
		<groupId>io.sarl</groupId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>
	
	<groupId>io.sarl.docs</groupId>
	<artifactId>io.sarl.docs.suite</artifactId>
	<packaging>jar</packaging>

	<name>Documentation Suite</name>

	<properties>
		<!-- needed for checkstyle/findbugs -->
		<main.basedir>${project.basedir}/../..</main.basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.arakhne.afc.core</groupId>
			<artifactId>vmutils</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.sarl.maven</groupId>
			<artifactId>io.sarl.maven.sdk</artifactId>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.sarl.lang</groupId>
			<artifactId>io.sarl.lang</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.sarl.lang</groupId>
			<artifactId>io.sarl.lang.tests</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.sarl</groupId>
			<artifactId>io.sarl.eclipse</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.xtend</groupId>
			<artifactId>org.eclipse.xtend.lib</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xbase</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jnario</groupId>
			<artifactId>org.jnario.lib</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>src/test/xtend-gen</directory>
								</fileset>
								<fileset>
									<directory>src/test/generated-sources</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jnario-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/jnario-doc</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/test/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Compute the target folder -->
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-dynamic-properties</id>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								snapshotTag = "-SNAPSHOT"
								if (project.version.endsWith(snapshotTag)) {
									len = project.version.size() - snapshotTag.size()
									version = project.version.substring(0,len)
									project.properties.sarlspecificationreleasestatus = "Draft Release"
								}
								else {
									version = project.version
									project.properties.sarlspecificationreleasestatus = "Final Release"
								}
								versionFields = version.split("\\.")
								project.properties.sarlspecificationreleaseversion = versionFields[0]+"."+versionFields[1]
								project.properties.sarlspecificationreleasedate =
									(new java.text.SimpleDateFormat("yyyy-MM-dd")).format(new java.util.Date())
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<executions>
					<!-- Replace the Maven properties in the Jnario specifications. These 
						specifications will be used for generating the reports only. -->
					<execution>
						<id>prepare-jnario-for-reports</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<encoding>${project.build.sourceEncoding}</encoding>
							<basedir>${project.basedir}/src/test/java</basedir>
							<outputDir>../../../target/generated-test-sources/reports-jnario</outputDir>
							<includes>
								<include>**/*.spec</include>
								<include>**/*.suite</include>
							</includes>
						</configuration>
					</execution>
					<!-- Replace the Maven properties in the Java files generated from the 
						Jnario specifications. These specifications will be used during tests only. -->
					<execution>
						<id>process-jnario-for-tests</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<encoding>${project.build.sourceEncoding}</encoding>
							<basedir>${project.basedir}/src/test/generated-sources/xtend</basedir>
							<outputDir>.</outputDir>
							<includes>
								<include>**/*Spec.java</include>
								<include>**/*Feature.java</include>
								<include>**/*Test.java</include>
								<include>**/*TestCase.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<replacements>
						<replacement>
							<token>%website%</token>
							<value>${sarl.url}</value>
						</replacement>
						<replacement>
							<token>%compilerlevel%</token>
							<value>${compiler.level}</value>
						</replacement>
						<replacement>
							<token>%encoding%</token>
							<value>${project.build.sourceEncoding}</value>
						</replacement>
						<replacement>
							<token>%sarlversion%</token>
							<value>${project.version}</value>
						</replacement>
						<replacement>
							<token>%janusversion%</token>
							<value>${janus.version}</value>
						</replacement>
						<replacement>
							<token>%xtextversion%</token>
							<value>${xtext.version}</value>
						</replacement>
						<replacement>
							<token>%jnarioversion%</token>
							<value>${jnario.version}</value>
						</replacement>
						<replacement>
							<token>%jnarioreportversion%</token>
							<value>${jnario.report.version}</value>
						</replacement>
						<replacement>
							<token>%sarlmavenrepository%</token>
							<value>${sarl.maven.repository.url}</value>
						</replacement>
						<replacement>
							<token>%janusmavenrepository%</token>
							<value>${janus.maven.repository.url}</value>
						</replacement>
						<replacement>
							<token>%sarlspecversion%</token>
							<value>${sarlspecificationreleaseversion}</value>
						</replacement>
						<replacement>
							<token>%sarlspecreleasestatus%</token>
							<value>${sarlspecificationreleasestatus}</value>
						</replacement>
						<replacement>
							<token>%sarlspecreleasedate%</token>
							<value>${sarlspecificationreleasedate}</value>
						</replacement>
						<replacement>
							<token>%copyrightdate%</token>
							<value>${year}</value>
						</replacement>
						<replacement>
							<token>%copyrighters%</token>
							<value>${copyrighters}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jnario</groupId>
				<artifactId>jnario-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Spec.java</include>
						<include>**/*Feature.java</include>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jnario</groupId>
				<artifactId>report</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceDirectory>${project.basedir}/target/generated-test-sources/reports-jnario</sourceDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<sourceDirectory>src/test/java</sourceDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
