/**
 * Copyright 2014 Sebastian RODRIGUEZ, Nicolas GAUD, St√©phane GALLAND.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.tests.compilation;

import com.google.inject.Inject;
import io.sarl.lang.SARLInjectorProvider;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.junit4.XtextRunner;
import org.eclipse.xtext.util.IAcceptor;
import org.eclipse.xtext.xbase.compiler.CompilationTestHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

/**
 * @author $Author: srodriguez$
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
@RunWith(XtextRunner.class)
@InjectWith(SARLInjectorProvider.class)
@SuppressWarnings("all")
public class CapacityCompilerTest {
  @Inject
  @Extension
  private CompilationTestHelper _compilationTestHelper;
  
  @Test
  public void completeFinalFieldInitialization() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Skill;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public class S1 extends Skill implements C1 {");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("protected final static int field1 = 5;");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("protected final static String field2 = \"\";");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill.");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* @param owner - agent that is owning this skill. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super(owner);");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill. The owning agent is unknown. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1() {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super();");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedS1 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("capacity C1 { }");
      _builder_2.newLine();
      _builder_2.append("skill S1 implements C1 {");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("val field1 : int = 5");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("val field2 : String = \"\"");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_1);
        }
      };
      this._compilationTestHelper.compile(_builder_2, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void missedActionImplementation_0() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("public abstract void myaction1(final int a);");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Capacity;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public interface C2 extends Capacity {");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public abstract void myaction2(final float b, final boolean c);");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedC2 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("import io.sarl.lang.core.Skill;");
      _builder_2.newLine();
      _builder_2.newLine();
      _builder_2.append("@SuppressWarnings(\"all\")");
      _builder_2.newLine();
      _builder_2.append("public class S1 extends Skill implements C1, C2 {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public void myaction1(final int x) {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public void myaction2(final float y, final boolean z) {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill.");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* @param owner - agent that is owning this skill. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super(owner);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill. The owning agent is unknown. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1() {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super();");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final String expectedS1 = _builder_2.toString();
      StringConcatenation _builder_3 = new StringConcatenation();
      _builder_3.append("capacity C1 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction1(a : int)");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("capacity C2 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction2(b : float, c : boolean)");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("skill S1 implements C1, C2 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction1(x : int) { }");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction2(y : float, z : boolean) { }");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("C2");
          Assert.assertEquals(expectedC2, _generatedCode_1);
          String _generatedCode_2 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_2);
        }
      };
      this._compilationTestHelper.compile(_builder_3, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void compatibleReturnType_0() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Capacity;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public interface C2 extends Capacity {");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedC2 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("import io.sarl.lang.core.Skill;");
      _builder_2.newLine();
      _builder_2.newLine();
      _builder_2.append("@SuppressWarnings(\"all\")");
      _builder_2.newLine();
      _builder_2.append("public class S1 extends Skill implements C1 {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public Number myaction(final int a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("return Double.valueOf(0.0);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill.");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* @param owner - agent that is owning this skill. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super(owner);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill. The owning agent is unknown. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1() {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super();");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final String expectedS1 = _builder_2.toString();
      StringConcatenation _builder_3 = new StringConcatenation();
      _builder_3.append("@SuppressWarnings(\"all\")");
      _builder_3.newLine();
      _builder_3.append("public class S2 extends S1 implements C2 {");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public Double myaction(final int a) {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("return Double.valueOf(0.0);");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("/**");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* Construct a skill.");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* @param owner - agent that is owning this skill. ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("*/");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public S2(final io.sarl.lang.core.Agent owner) {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("super(owner);");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("/**");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* Construct a skill. The owning agent is unknown. ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("*/");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public S2() {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("super();");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      final String expectedS2 = _builder_3.toString();
      StringConcatenation _builder_4 = new StringConcatenation();
      _builder_4.append("capacity C1 { }");
      _builder_4.newLine();
      _builder_4.append("capacity C2 { }");
      _builder_4.newLine();
      _builder_4.append("skill S1 implements C1 {");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("def myaction(a : int) : Number {");
      _builder_4.newLine();
      _builder_4.append("\t\t");
      _builder_4.append("return 0.0");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("skill S2 extends S1 implements C2 {");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("def myaction(a : int) : Double {");
      _builder_4.newLine();
      _builder_4.append("\t\t");
      _builder_4.append("return 0.0");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("}");
      _builder_4.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("C2");
          Assert.assertEquals(expectedC2, _generatedCode_1);
          String _generatedCode_2 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_2);
          String _generatedCode_3 = r.getGeneratedCode("S2");
          Assert.assertEquals(expectedS2, _generatedCode_3);
        }
      };
      this._compilationTestHelper.compile(_builder_4, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void compatibleReturnType_1() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Capacity;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public interface C2 extends Capacity {");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedC2 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("import io.sarl.lang.core.Skill;");
      _builder_2.newLine();
      _builder_2.newLine();
      _builder_2.append("@SuppressWarnings(\"all\")");
      _builder_2.newLine();
      _builder_2.append("public class S1 extends Skill implements C1 {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public float myaction(final int a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("return 0f;");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill.");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* @param owner - agent that is owning this skill. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super(owner);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill. The owning agent is unknown. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1() {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super();");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final String expectedS1 = _builder_2.toString();
      StringConcatenation _builder_3 = new StringConcatenation();
      _builder_3.append("@SuppressWarnings(\"all\")");
      _builder_3.newLine();
      _builder_3.append("public class S2 extends S1 implements C2 {");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public float myaction(final int a) {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("return 0f;");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("/**");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* Construct a skill.");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* @param owner - agent that is owning this skill. ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("*/");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public S2(final io.sarl.lang.core.Agent owner) {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("super(owner);");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("/**");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* Construct a skill. The owning agent is unknown. ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("* ");
      _builder_3.newLine();
      _builder_3.append("   ");
      _builder_3.append("*/");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("public S2() {");
      _builder_3.newLine();
      _builder_3.append("    ");
      _builder_3.append("super();");
      _builder_3.newLine();
      _builder_3.append("  ");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      final String expectedS2 = _builder_3.toString();
      StringConcatenation _builder_4 = new StringConcatenation();
      _builder_4.append("capacity C1 { }");
      _builder_4.newLine();
      _builder_4.append("capacity C2 { }");
      _builder_4.newLine();
      _builder_4.append("skill S1 implements C1 {");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("def myaction(a : int) : float {");
      _builder_4.newLine();
      _builder_4.append("\t\t");
      _builder_4.append("return 0f");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("skill S2 extends S1 implements C2 {");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("def myaction(a : int) : float {");
      _builder_4.newLine();
      _builder_4.append("\t\t");
      _builder_4.append("return 0f");
      _builder_4.newLine();
      _builder_4.append("\t");
      _builder_4.append("}");
      _builder_4.newLine();
      _builder_4.append("}");
      _builder_4.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("C2");
          Assert.assertEquals(expectedC2, _generatedCode_1);
          String _generatedCode_2 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_2);
          String _generatedCode_3 = r.getGeneratedCode("S2");
          Assert.assertEquals(expectedS2, _generatedCode_3);
        }
      };
      this._compilationTestHelper.compile(_builder_4, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void compatibleReturnType_2() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Skill;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public class S1 extends Skill implements C1 {");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public float myaction(final int a) {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("return 0f;");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill.");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* @param owner - agent that is owning this skill. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super(owner);");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill. The owning agent is unknown. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1() {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super();");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedS1 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("capacity C1 { }");
      _builder_2.newLine();
      _builder_2.append("skill S1 implements C1 {");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("def myaction(a : int) : float {");
      _builder_2.newLine();
      _builder_2.append("\t\t");
      _builder_2.append("return 0f");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_1);
        }
      };
      this._compilationTestHelper.compile(_builder_2, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void compatibleReturnType_3() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("public abstract float myaction(final int a);");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Skill;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public class S1 extends Skill implements C1 {");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public float myaction(final int a) {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("return 0f;");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill.");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* @param owner - agent that is owning this skill. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super(owner);");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("/**");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* Construct a skill. The owning agent is unknown. ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("* ");
      _builder_1.newLine();
      _builder_1.append("   ");
      _builder_1.append("*/");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public S1() {");
      _builder_1.newLine();
      _builder_1.append("    ");
      _builder_1.append("super();");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("}");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedS1 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("capacity C1 {");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("def myaction(a : int) : float");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("skill S1 implements C1 {");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("def myaction(a : int) : float {");
      _builder_2.newLine();
      _builder_2.append("\t\t");
      _builder_2.append("return 0f");
      _builder_2.newLine();
      _builder_2.append("\t");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_1);
        }
      };
      this._compilationTestHelper.compile(_builder_2, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void capacityAccessors_inSkill() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("import io.sarl.lang.core.Capacity;");
      _builder.newLine();
      _builder.newLine();
      _builder.append("@SuppressWarnings(\"all\")");
      _builder.newLine();
      _builder.append("public interface C1 extends Capacity {");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("public abstract float myaction(final int a);");
      _builder.newLine();
      _builder.append("  ");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("public abstract void myaction2(final boolean a);");
      _builder.newLine();
      _builder.append("}");
      _builder.newLine();
      final String expectedC1 = _builder.toString();
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("import io.sarl.lang.core.Capacity;");
      _builder_1.newLine();
      _builder_1.newLine();
      _builder_1.append("@SuppressWarnings(\"all\")");
      _builder_1.newLine();
      _builder_1.append("public interface C2 extends Capacity {");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public abstract float myaction3(final int a);");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.newLine();
      _builder_1.append("  ");
      _builder_1.append("public abstract void myaction4(final boolean a);");
      _builder_1.newLine();
      _builder_1.append("}");
      _builder_1.newLine();
      final String expectedC2 = _builder_1.toString();
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("import io.sarl.lang.annotation.Generated;");
      _builder_2.newLine();
      _builder_2.append("import io.sarl.lang.core.Skill;");
      _builder_2.newLine();
      _builder_2.newLine();
      _builder_2.append("@SuppressWarnings(\"all\")");
      _builder_2.newLine();
      _builder_2.append("public class S1 extends Skill implements C1 {");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("@Generated");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("protected float myaction3(final int a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("return getSkill(C2.class).myaction3(a);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("@Generated");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("protected void myaction4(final boolean a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("getSkill(C2.class).myaction4(a);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public float myaction(final int a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("return this.myaction3(a);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public void myaction2(final boolean a) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("this.myaction4(a);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill.");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* @param owner - agent that is owning this skill. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1(final io.sarl.lang.core.Agent owner) {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super(owner);");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("/**");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* Construct a skill. The owning agent is unknown. ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("* ");
      _builder_2.newLine();
      _builder_2.append("   ");
      _builder_2.append("*/");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("public S1() {");
      _builder_2.newLine();
      _builder_2.append("    ");
      _builder_2.append("super();");
      _builder_2.newLine();
      _builder_2.append("  ");
      _builder_2.append("}");
      _builder_2.newLine();
      _builder_2.append("}");
      _builder_2.newLine();
      final String expectedS1 = _builder_2.toString();
      StringConcatenation _builder_3 = new StringConcatenation();
      _builder_3.append("capacity C1 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction(a : int) : float");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction2(a : boolean)");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("capacity C2 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction3(a : int) : float");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction4(a : boolean)");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("skill S1 implements C1 {");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("uses C2");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction(a : int) : float {");
      _builder_3.newLine();
      _builder_3.append("\t\t");
      _builder_3.append("return myaction3(a)");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("def myaction2(a : boolean) {");
      _builder_3.newLine();
      _builder_3.append("\t\t");
      _builder_3.append("myaction4(a)");
      _builder_3.newLine();
      _builder_3.append("\t");
      _builder_3.append("}");
      _builder_3.newLine();
      _builder_3.append("}");
      _builder_3.newLine();
      final IAcceptor<CompilationTestHelper.Result> _function = new IAcceptor<CompilationTestHelper.Result>() {
        public void accept(final CompilationTestHelper.Result r) {
          String _generatedCode = r.getGeneratedCode("C1");
          Assert.assertEquals(expectedC1, _generatedCode);
          String _generatedCode_1 = r.getGeneratedCode("C2");
          Assert.assertEquals(expectedC2, _generatedCode_1);
          String _generatedCode_2 = r.getGeneratedCode("S1");
          Assert.assertEquals(expectedS1, _generatedCode_2);
        }
      };
      this._compilationTestHelper.compile(_builder_3, _function);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
