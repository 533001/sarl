#!/usr/bin/env perl

use strict;

my @BASE_MODULES = ("io.sarl.lang", "io.sarl.lang.core", "org.eclipse.osgi", "org.eclipse.xtend.core");

my %MODULE_MAP = (
	"io.sarl.lang"				=>		"io.sarl.lang:io.sarl.lang",
	"io.sarl.lang.core"			=>		"io.sarl.lang:io.sarl.lang.core",
	"org.eclipse.osgi"			=>		"org.eclipse:osgi",
	"org.eclipse.xtend.core"	=>		"org.eclipse.xtend:org.eclipse.xtend.core",
);

use File::Basename;
use File::Spec;

my $SCRIPT_DIR = File::Spec->rel2abs(dirname($0));
my $IN_FILENAME = File::Spec->catfile("$SCRIPT_DIR", "src-templates", "pom.template");
my $OUT_FILENAME = File::Spec->catfile("$SCRIPT_DIR", "pom.xml");

local *INFILE;

open(*INFILE, "< $IN_FILENAME") or die("$IN_FILENAME: $!\n");
my $content = '';
while (my $line = <INFILE>) {
	$content .= "$line";
}
close(*INFILE);

my $dependencyList = '';
my $mavenDependencies = '';

my @deps = (@BASE_MODULES);

while (@deps) {
	my $dep = shift @deps;
	if (!exists $MODULE_MAP{$dep} || !$MODULE_MAP{$dep}) {
		die("Undefined mapping from Eclipse plugin '$dep' to equivalent Maven artifact.");
	}
	if ($dependencyList) {
		$dependencyList .= ", ";
	}
	my $groupId;
	my $artifactId;
	if ($MODULE_MAP{$dep} =~ /^([^:]+):([^:]+)$/) {
		$groupId = "$1";
		$artifactId = "$2";
	} else {
		die("Invalid format for '$MODULE_MAP{$dep}'.");
	}
	$dependencyList .= $MODULE_MAP{$dep};
	$mavenDependencies .= "\t\t<dependency>\n";
	$mavenDependencies .= "\t\t\t<groupId>$groupId</groupId>\n";
	$mavenDependencies .= "\t\t\t<artifactId>$artifactId</artifactId>\n";
	if ($dep =~ /^io\.sarl/) {
		$mavenDependencies .= "\t\t\t<exclusions>\n";
		$mavenDependencies .= "\t\t\t\t<exclusion>\n";
		$mavenDependencies .= "\t\t\t\t\t<groupId>*</groupId>\n";
		$mavenDependencies .= "\t\t\t\t\t<artifactId>*</artifactId>\n";
		$mavenDependencies .= "\t\t\t\t</exclusion>\n";
		$mavenDependencies .= "\t\t\t</exclusions>\n";
	}
	$mavenDependencies .= "\t\t</dependency>\n";
}

$content =~ s/%\%DEPENDENCY_LIST%%/$dependencyList/sg;
$content =~ s/%\%MAVEN_DEPENDENCIES%%/\n$mavenDependencies/sg;

local *OUTFILE;
open(*OUTFILE, "> $OUT_FILENAME") or die("$OUT_FILENAME: $!\n");
print OUTFILE "<!-- *******************************************************\n";
print OUTFILE "   * This file is automatically generated. Do not change it. *\n";
print OUTFILE "     ******************************************************* -->\n\n";
print OUTFILE ($content);
close(*OUTFILE);

exit(0);

