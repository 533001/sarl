/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright 2014-2016 the original authors and authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.codebuilder.builders;

import io.sarl.lang.sarl.SarlInterface;
import io.sarl.lang.sarl.SarlScript;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.xbase.lib.Pure;

/** Builder of a Sarl SarlInterface.
 */
@SuppressWarnings("all")
public interface IInterfaceBuilder {

	/** Initialize the Ecore element.
	 */
	void eInit(SarlScript script, String name);

	/** Replies the generated SarlInterface.
	 */
	@Pure
	SarlInterface getSarlInterface();

	/** Replies the resource to which the SarlInterface is attached.
	 */
	@Pure
	Resource eResource();

	/** Change the documentation of the element.
	 *
	 * <p>The documentation will be displayed just before the element.
	 *
	 * @param doc the documentation.
	 */
	void setDocumentation(String doc);

	/** Add the super type.
	 * @param superType - the qualified name of the super type.
	 */
	void addExtends(String superType);

	/** Create an Action.
	 * @param name - the name of the Action.
	 * @return the builder.
	 */
	IActionBuilder addAction(String name);

	/** Create a Field.
	 * @param name - the name of the Field.
	 * @return the builder.
	 */
	IFieldBuilder addVarField(String name);

	/** Create a Field.
	 * @param name - the name of the Field.
	 * @return the builder.
	 */
	IFieldBuilder addValField(String name);

	/** Create a Field.	 *
	 * <p>This function is equivalent to {@link #addVarField}.
	 * @param name - the name of the Field.
	 * @return the builder.
	 */
	IFieldBuilder addField(String name);

}

