«REM»
/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2015 the original authors and authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
«ENDREM»

«IMPORT org::eclipse::xtext»

«EXTENSION org::eclipse::xtext::generator::Naming»
«EXTENSION org::eclipse::xtext::GrammarUtil»

«DEFINE generate(String basePackage) FOR Grammar»
«ENDDEFINE»

«DEFINE addToPluginXmlRt(String basePackage, String genmodelPath) FOR Grammar-»
«IF !metamodelDeclarations.typeSelect(GeneratedMetamodel).isEmpty»
  <extension point="org.eclipse.emf.ecore.generated_package">
  «FOREACH metamodelDeclarations.typeSelect(GeneratedMetamodel) AS p-»
    <package 
       uri = "«p.EPackage.nsURI»" 
       class = "«basePackage».«p.name».«p.name.toFirstUpper()»Package"
       genModel = "«genmodelPath»" /> 
	«ENDFOREACH»
  </extension>
«ENDIF»
«ENDDEFINE»


«DEFINE addToPluginXmlUi(String basePackage) FOR Grammar-»
«ENDDEFINE»

«DEFINE addToStandaloneSetup(String basePackage) FOR Grammar-»
	«FOREACH metamodelDeclarations.typeSelect(GeneratedMetamodel) AS mmd-»
	if (!EPackage.Registry.INSTANCE.containsKey("«mmd.EPackage.nsURI»")) {
		EPackage.Registry.INSTANCE.put("«mmd.EPackage.nsURI»", «basePackage».«mmd.name».«mmd.name.toFirstUpper()»Package.eINSTANCE);
	}
	«ENDFOREACH-»
«ENDDEFINE»


